{"version":3,"sources":["../../src/providers/alert/alert.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/app/helpers/configHelper.ts","../../src/app/base/providerBase.ts","../../src/providers/spinner/spinner.ts","../../src/providers/network/network.ts","../../src/providers/categoria/categoria.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/usuario/usuario.ts","../../src/providers/http/http.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { AlertController, ToastController } from \"ionic-angular\";\n\n@Injectable()\nexport class AlertProvider {\n  constructor(\n    private alertCtrl: AlertController,\n    private toastCtrl: ToastController\n  ) {}\n\n  //o toast é responsável pela barrinha que abre em baixo\n  toast(title: string, position: string): void {\n    //criando o toast passando a message conforme o parametro do método, e uma duração de 3segundos\n    let toast = this.toastCtrl.create({\n      message: title,\n      position: position,\n      duration: 3000\n    });\n    toast.present();\n  }\n\n  alert(title: string, message: string): void {\n    this.alertCtrl\n      .create({\n        title: title,\n        message: message,\n        //buttons é um array\n        buttons: [\"OK\"],\n        //Se clicar fora do alert ele fecha caso esteja true.\n        enableBackdropDismiss: false\n      })\n      .present();\n  }\n\n  confirm(title: string, message: string, callback: any): void {\n    this.alertCtrl.create({\n      title: title,\n      message: message,\n      buttons: [\n        //é criado o texto e a ação(handler), o role 'Cancel' nesse caso faz com que a cor do botão fique vermelha (sim, é necessário colocar o 'Cancel' também! )\n        { text: \"Não\", role: 'Cancel',  handler: () => { console.log('Confirm:Say:no') } },\n        { text: \"Sim\", handler: () => {//aqui é executado o que a pessoa mandar na hr\n          callback();\n         }}\n      ]\n    }).present();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/alert/alert.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 113;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 113\n// module chunks = 10","var map = {\n\t\"../pages/adm-categoria/adm-categorias.module\": [\n\t\t281,\n\t\t9\n\t],\n\t\"../pages/adm-categorias/categorias.module\": [\n\t\t282,\n\t\t8\n\t],\n\t\"../pages/cadastro/cadastro.module\": [\n\t\t283,\n\t\t1\n\t],\n\t\"../pages/categoria/categoria.module\": [\n\t\t284,\n\t\t7\n\t],\n\t\"../pages/login/login.module\": [\n\t\t285,\n\t\t6\n\t],\n\t\"../pages/meus-pedidos/meus-pedidos.module\": [\n\t\t286,\n\t\t5\n\t],\n\t\"../pages/minha-conta/minha-conta.module\": [\n\t\t287,\n\t\t4\n\t],\n\t\"../pages/produtos/produtos.module\": [\n\t\t288,\n\t\t3\n\t],\n\t\"../pages/tab-categoria/tab-categoria.module\": [\n\t\t289,\n\t\t0\n\t],\n\t\"../pages/tabs/tabs.module\": [\n\t\t290,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 155;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 155\n// module chunks = 10","export class configHelper {\r\n    public static url: string = '/v1/';\r\n    //public static url: string = 'http://localhost:3000/api/';\r\n\r\n    public static storageKeys = {\r\n    token: 'nofood.token',\r\n    user: 'nofood.user'\r\n\r\n    }\r\n\r\n    \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/helpers/configHelper.ts","import { HttpProvider } from '../../providers/http/http';\r\nimport { httpResultModel } from '../models/httpResultModel';\r\n//o T é uma variável que irá receber o tipo do model que será passado quando implementarmos.\r\nexport abstract class ProviderBase<T>{\r\n        constructor(public url: string,\r\n            public http: HttpProvider){}\r\n\r\n    get(): Promise<httpResultModel>{\r\n        return this.http.get(this.url);\r\n    }\r\n    //passando o id por parametro, e colocando o id passado na url.\r\n    //Quando é necessário ID é feito dessa forma o return\r\n    getByUid(uid: string): Promise<httpResultModel>{\r\n        return this.http.get(`${this.url}/${uid}`);\r\n    }\r\n    //ele é um model do tipo T que é o que é recebido lá em cima\r\n    post(model: T): Promise<httpResultModel>{\r\n        return this.http.post(this.url, model);\r\n    }\r\n    put(uid: string, model: T): Promise<httpResultModel>{\r\n        return this.http.put(`${this.url}/${uid}`, model);\r\n    }\r\n\r\n    delete(uid: string): Promise<httpResultModel>{\r\n        return this.http.delete(`${this.url}/${uid}`);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/base/providerBase.ts","import { Injectable } from \"@angular/core\";\nimport { LoadingController, Loading } from \"ionic-angular\";\n\n/*\n  Generated class for the SpinnerProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class SpinnerProvider {\n  //criando uma variável caham spinner do tipo loading\n  private spinner: Loading = null;\n\n  constructor(public loading: LoadingController) {}\n\n  //criando um método para chamar a spinner\n  show(message: string): void {\n    if (!this.spinner) {\n      /*Se o spinner for vazio irá entrar nessa condição.\n      aqui adiciona ao spinner um create do loading do ionic, e no content dele é adicionado uma message que foi declarada no método, caso a informação venha nula irá aparecer 'Carregando...' */\n\n      this.spinner = this.loading.create({ content: message || \"Carregando...\" });\n      //\n      this.spinner.present();\n    } else {\n      this.spinner.data.content = message;\n    }\n  }\n\n  //criando o método hide para esconder quando necessário\n  hide(): void {\n    if (this.spinner) {\n      this.spinner.dismiss();\n      this.spinner = null;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/spinner/spinner.ts","import { Injectable } from \"@angular/core\";\nimport { Platform } from \"ionic-angular\";\n\ndeclare var navigator: any;\ndeclare var Connection: any;\n@Injectable()\nexport class NetworkProvider {\n  constructor(private platform: Platform) {}\n\n  get isOnline(): boolean {\n    if (this.platform.is(\"cordova\")) {\n      //verificando se existe a connection, e se sim verificando o tipo da conexão\n      if (navigator.connection && navigator.connection.type) {\n        return (\n          navigator.connection != Connection.UNKKONW &&\n          navigator.connection.type != Connection.NONE\n        );\n      }\n    //se não consiga checar as informações a cima ele retorna true, caso não seja devide ele vai para o else abaixo.  \n      else \n      return true;\n    } else {\n      return navigator.onLine;\n\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/network/network.ts","import { configHelper } from './../../app/helpers/configHelper';\nimport { Injectable } from '@angular/core';\nimport { ProviderBase } from '../../app/base/providerBase';\nimport { categoriaModel } from '../../app/models/categoriaModel';\nimport { HttpProvider } from '../http/http';\n\n@Injectable()\nexport class CategoriaProvider extends ProviderBase<categoriaModel>{\n\n  urr: string = `${configHelper.url}categoria`;\n\n  constructor(public http: HttpProvider) {\n    super(`${configHelper.url}categoria`, http);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/categoria/categoria.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { SpinnerProvider } from '../providers/spinner/spinner';\nimport { AlertProvider } from '../providers/alert/alert';\nimport { NetworkProvider } from '../providers/network/network';\nimport { HttpProvider } from '../providers/http/http';\nimport { usuarioProvider } from '../providers/usuario/usuario';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CategoriaProvider } from '../providers/categoria/categoria';\n\n@NgModule({\n  declarations: [\n    MyApp,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    SpinnerProvider,\n    AlertProvider,\n    NetworkProvider,\n    HttpProvider,\n    usuarioProvider,\n    CategoriaProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { LoginPage } from '../pages/login/login';\nimport { usuarioProvider } from '../providers/usuario/usuario';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  //colocado como string, dessa forma o próprio ionic se encarrega de encontrar a página e fazer o carregamento dela.\n  //fazendo a autenticação, caso o usuário esteja logado irá direto para a primeiro página após logar, caso contrário será inviado para a tela de login\n  rootPage:any = usuarioProvider.isLogado ? 'CategoriaPage' : 'LoginPage';\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { configHelper } from './../../app/helpers/configHelper';\nimport { Injectable } from '@angular/core';\nimport { ProviderBase } from '../../app/base/providerBase';\nimport { usuarioModel } from '../../app/models/usuarioModel';\nimport { HttpProvider } from '../http/http';\nimport { httpResultModel } from '../../app/models/httpResultModel';\n\n/*\n  Generated class for the UsuarioProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class usuarioProvider extends ProviderBase<usuarioModel> {\n\nurl: string = `${configHelper.url}usuario`\n\n  constructor(public http: HttpProvider) {\n      //mesmo conceito do java.\n      //O super() serve para chamar o construtor da superclasse. \n      //a url é a junção da classe config helper criada que contem: http://localhost/api + usuario que é da nossa rota de usuarios da api\n      super(`${configHelper.url}usuario`, http);\n  }\n\n    //criando o authenticate da mesma forma do back\n  async autenticate(email: string, senha: string): Promise<httpResultModel> {\n    //nas rotas da api o autenticar é um post\n    return this.http.post(`${this.url}/autenticar`, {email:email, senha:senha});\n  }\n  async register(usuario: usuarioModel): Promise<httpResultModel>{\n    console.log('Usuario Provider');\n    return this.http.post(`${this.url}/register`, usuario);\n  }\n\n  //sem isso o não vai ser possível dar um get ou acessar qualquer rota que tenha a autenticação\n  //salvando informações de login no local storage\n  static RegisterLogin(result: any){\n    localStorage.setItem(configHelper.storageKeys.token, result.token);\n    //transformando o user em string, se não aparece como objeto na hr de exibir no nofood.user\n    localStorage.setItem(configHelper.storageKeys.user, JSON.stringify(result.usuario));\n  } \n\nstatic get getTokenAccess(): string{\n  return localStorage.getItem(configHelper.storageKeys.token);\n}\n\n  //verificando se o usuario está logado, e se sim, não precisará entrar na tela de login novamente\n  static get isLogado(): boolean{\n    return (localStorage.getItem(configHelper.storageKeys.token) != undefined);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/usuario/usuario.ts","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { AlertProvider } from \"../alert/alert\";\nimport { SpinnerProvider } from \"../spinner/spinner\";\nimport { NetworkProvider } from \"../network/network\";\nimport { httpResultModel } from \"../../app/models/httpResultModel\";\nimport { usuarioProvider } from '../usuario/usuario';\n\n/*\n  Generated class for the HttpProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class HttpProvider {\n  constructor(\n    private http: HttpClient,\n    private alertSrvc: AlertProvider,\n    private spinnerSrvc: SpinnerProvider,\n    private networkSrvc: NetworkProvider\n  ) {\n  }\n\n  //verificar se está online\n  //pega a url\n  //tirar o loader\n  //resolve\n\n\n\n//criando o esquema para pegar o token e ter permissão de get, post, put ao logar.\npublic createHeader(header?: HttpHeaders): HttpHeaders{\n    if(!header){\n      header = new HttpHeaders();\n    }\n//dizendo que quer que seja trafegado http o aplication json\nheader = header.append('Content-Type', 'application/json');\n//dizendo que só vai aceitar se for json\nheader = header.append('Accept', 'application/json')\n\nlet token = usuarioProvider.getTokenAccess;\nif(token){\n  header = header.append('user-token', token);\n}\n\n    return header;\n}\n\n\n  public get(url: string): Promise<httpResultModel> {\n    this.spinnerSrvc.show(\"Carregando os dados ...\");\n    let header = this.createHeader();\n    return new Promise(resolve => {\n      if (this.networkSrvc.isOnline) {\n        //método http do angular\n        this.http.get(url, {headers: header}).subscribe(\n          _res => {\n            this.spinnerSrvc.hide();\n            resolve({ success: true, data: _res, err: undefined });\n          },\n          err => {\n            //ocultando o alert caso de um erro no get\n            this.spinnerSrvc.hide();\n            this.alertSrvc.toast(\n              \"Não foi possível consultar os dados, verifique sua conexão e tente novamente\",\n              \"bottom\"\n            );\n            resolve({ success: false, data: undefined, err: err });\n          }\n        );\n      } else {\n        this.alertSrvc.toast(\n          \"Você está offline e por isso não pode acessar os dados\",\n          \"bottom\"\n        );\n        resolve({ success: true, data: [], err: undefined });\n      }\n    });\n  }\n  //--------------------------POST---------------------------------------------\n  public post(url: string, model: any): Promise<httpResultModel> {\n    \n    this.spinnerSrvc.show(\"Salvando informações...\");\n    return new Promise(resolve => {\n      if (this.networkSrvc.isOnline) {\n        this.http.post(url, model).subscribe(\n          _res => {\n            this.spinnerSrvc.hide();\n            resolve({ success: true, data: _res, err: undefined });\n          },\n          err => {\n            this.spinnerSrvc.hide();\n            console.log(err);\n\n            //\n            if (err.status == 400) {\n              let msg = \"\";\n              err.error.validation.forEach(_err =>{\n                msg += `<li>${_err.message}</li>`;\n              });\n              this.alertSrvc.alert(err.error.message, msg);\n\n            } \n            else if(err.status == 404){\n              this.alertSrvc.alert(\"informação\", err.error.message);\n            }\n            else\n              this.alertSrvc.toast(\n                \"Não foi possível realizar o processamento da informação, verifique sua conexão e tente novamente\",\n                \"bottom\"\n              );\n            resolve({ success: false, data: undefined, err: err });\n          }\n        );\n      } else {\n        this.alertSrvc.toast(\n          \"Você está offline e infelizmente não pode ser enviado os dados\",\n          \"bottom\"\n        );\n        resolve({ success: true, data: [], err: undefined });\n      }\n    });\n  }\n  //--------------------------------------------------------------------------------\n\n\n//--------------------------------------------UPDATE--------------------------------------------------------\n  public put(url: string, model: any): Promise<httpResultModel>{\n    this.spinnerSrvc.show('Atualizando informações..');\n    return new Promise((resolve) =>{\n      if(this.networkSrvc.isOnline){\n        this.http.put(url, model).subscribe(_res =>{\n          this.spinnerSrvc.hide();\n          resolve({success: true, data: _res, err: undefined});\n        }, err=>{\n          this.spinnerSrvc.hide();\n          console.log(err);\n          if(err.status == 400){\n              let msg ='';\n              err.error.validation.forEach(_err =>{\n                msg += `<li>${_err.message}</li>`;\n              });\n              this.alertSrvc.alert(err.errors.message, msg);\n          }\n          else \n          this.alertSrvc.toast('Não foi possível realizar o processamento da informação, verifique sua conexão e tente novamente', 'bottom');\n          resolve({success: false, data: undefined, err: err});\n        });\n      }\n      else {\n        this.alertSrvc.toast('Você está offline e infelizmente não pode ser enviado os dados!', 'bottom');\n        resolve({success: true, data: [], err: undefined});\n      }\n    })\n  }\n//----------------------------------------------------------------------------------------------------\n\n//--------------------------------------------DELETE--------------------------------------------------------\npublic delete(url: string): Promise<httpResultModel>{\n  this.spinnerSrvc.show('Removendo registro');\n  return new Promise((resolve) =>{\n    if(this.networkSrvc.isOnline){\n      this.http.delete(url).subscribe(_res =>{\n        this.spinnerSrvc.hide();\n        resolve({success: true, data: _res, err: undefined})\n      }, err =>{\n        this.spinnerSrvc.hide();\n        this.alertSrvc.toast('Não foi possível realizar o processamento da informação, verifique sua conexão e tente novamente', 'bottom')\n        resolve({success: false, data: undefined, err: err});\n      });\n    } else {\n      this.alertSrvc.toast('Você está offline e infelizmente não pode ser enviado os dados!', 'bottom');\n      resolve({success: true, data: [], err: undefined});\n    }\n  })\n}\n//-------------------------------------------------------------------------------------------------\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/http/http.ts"],"sourceRoot":""}